#!/bin/sh
# Copyright (c) 2010 TeamSpeak Systems GmbH
# All rights reserved

# COMMANDLINE_PARAMETERS="${2}" #add any command line parameters you want to pass here
# D1=$(readlink -f "$0")
# BINARYPATH="$(dirname "${D1}")"
# cd "${BINARYPATH}"
# LIBRARYPATH="$(pwd)"
# BINARYNAME="ts3server"

COMMANDLINE_PARAMETERS="logpath=/var/vcap/sys/log/teamspeak"

export BINARYPATH=/var/vcap/packages/teamspeak-3.12.1
export LIBRARYPATH=$BINARYPATH
export BINARYNAME=ts3server
export TEAMSPEAK_PID=/var/vcap/sys/run/teamspeak.pid

export TS3SERVER_LICENSE=accept

cd $BINARYPATH

case "$1" in
	start)
	  set +e
		dpkg-query -W -f='${Status}\n' sqlite3 | grep 'install ok installed'
		SQLITE_INSTALLED=$?
		set -e

		if [ $SQLITE_INSTALLED -ne 0 ]; then
			apt-get update -y
			apt-get install -y sqlite3
		fi

		if [ -e $TEAMSPEAK_PID ]; then
			if ( kill -0 $(cat $TEAMSPEAK_PID) 2> /dev/null ); then
				echo "The server is already running, try restart or stop"
				exit 1
			else
				echo "$TEAMSPEAK_PID found, but no server running. Possibly your previously started server crashed"
				echo "Please view the logfile for details."
				rm $TEAMSPEAK_PID
			fi
		fi
		if [ "${UID}" = "0" ]; then
			echo WARNING ! For security reasons we advise: DO NOT RUN THE SERVER AS ROOT
			c=1
			while [ "$c" -le 10 ]; do
				echo -n "!"
				sleep 1
				c=$(($c+1))
			done
			echo "!"
		fi
		echo "Starting the TeamSpeak 3 server"
		if [ -e "$BINARYNAME" ]; then
			if [ ! -x "$BINARYNAME" ]; then
				echo "${BINARYNAME} is not executable, trying to set it"
				chmod u+x "${BINARYNAME}"
			fi
			if [ -x "$BINARYNAME" ]; then
				export LD_LIBRARY_PATH="${LIBRARYPATH}:${LD_LIBRARY_PATH}"
				"./${BINARYNAME}" ${COMMANDLINE_PARAMETERS} > /dev/null &
 				PID=$!
				ps -p ${PID} > /dev/null 2>&1
				if [ "$?" -ne "0" ]; then
					echo "TeamSpeak 3 server could not start"
				else
					echo $PID > $TEAMSPEAK_PID
					echo "TeamSpeak 3 server started, for details please view the log file"

					echo "Allow Teamspeak Server to write random admin Token"
					sleep 5

					GENERATED_KEY="$(sqlite3 "$BINARYPATH/ts3server.sqlitedb" "select value from server_properties where ident='virtualserver_autogenerated_privilegekey'")"
					if [ ! -z "$GENERATED_KEY" ] && [ "$GENERATED_KEY" != "<%= p('teamspeak_admin_token') %>" ] ; then
						echo "Teamspeak generated random admin token. Updating and restarting Teamspeak..."
						sqlite3 $BINARYPATH/ts3server.sqlitedb "UPDATE tokens SET token_key='<%= p('teamspeak_admin_token') %>' WHERE 1=1;"
						sqlite3 $BINARYPATH/ts3server.sqlitedb "UPDATE server_properties SET value='<%= p('teamspeak_admin_token') %>' WHERE ident='virtualserver_autogenerated_privilegekey';"
						killall -HUP "${BINARYNAME}"
					fi
				fi
			else
				echo "${BINARNAME} is not exectuable, cannot start TeamSpeak 3 server"
			fi
		else
			echo "Could not find binary, aborting"
			exit 5
		fi
	;;
	stop)
		if [ -e $TEAMSPEAK_PID ]; then
			echo -n "Stopping the TeamSpeak 3 server"
			if ( kill -TERM $(cat $TEAMSPEAK_PID) 2> /dev/null ); then
				c=1
				while [ "$c" -le 300 ]; do
					if ( kill -0 $(cat $TEAMSPEAK_PID) 2> /dev/null ); then
						echo -n "."
						sleep 1
					else
						break
					fi
					c=$(($c+1))
				done
			fi
			if ( kill -0 $(cat $TEAMSPEAK_PID) 2> /dev/null ); then
				echo "Server is not shutting down cleanly - killing"
				kill -KILL $(cat $TEAMSPEAK_PID)
			else
				echo "done"
			fi
			rm $TEAMSPEAK_PID
		else
			echo "No server running ($TEAMSPEAK_PID is missing)"
			exit 7
		fi
	;;
	restart)
		$0 stop && $0 start ${COMMANDLINE_PARAMETERS} || exit 1
	;;
	status)
		if [ -e $TEAMSPEAK_PID ]; then
			if ( kill -0 $(cat $TEAMSPEAK_PID) 2> /dev/null ); then
				echo "Server is running"
			else
				echo "Server seems to have died"
			fi
		else
			echo "No server running ($TEAMSPEAK_PID is missing)"
		fi
	;;
	*)
		echo "Usage: ${0} {start|stop|restart|status}"
		exit 2
esac
exit 0

